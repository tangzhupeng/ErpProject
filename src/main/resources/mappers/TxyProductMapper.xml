<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gson.jindie.model.mapper.txymapper.TxyProductMapper">
    <resultMap id="product" type="cn.gson.jindie.model.pojos.txypojos.ErpProduct">
        <id property="productId" column="product_id"></id>
        <result property="productName" column="product_name"></result>
        <result property="productPicture" column="product_picture"></result>
        <result property="productMoney" column="product_money"></result>
        <result property="productPrice" column="product_price"></result>
        <result property="productDw" column="product_dw"></result>
        <result property="productNumber" column="product_number"></result>
        <result property="productState" column="product_state"></result>
        <result property="productPf" column="product_pf"></result>
        <result property="productVip" column="product_vip"></result>
        <association property="protype" javaType="cn.gson.jindie.model.pojos.txypojos.ErpProductType">
            <id property="protypeId" column="protype_id"/>
            <result property="protypeName" column="protype_name"/>
        </association>
        <association property="erpAllot" javaType="cn.gson.jindie.model.pojos.storempojos.ErpAllot">
            <id column="allot_id" property="allotId"/>
            <result column="allot_name" property="allotName"/>
        </association>
        <association property="erpCheck" javaType="cn.gson.jindie.model.pojos.storempojos.ErpCheck">
            <id column="check_id" property="checkId"/>
            <result column="check_number" property="checkNumber"/>
            <result column="check_state" property="checkState"/>
        </association>
        <association property="stores" javaType="cn.gson.jindie.model.pojos.txypojos.ErpStore">
            <id column="store_id"  property="storeId"/>
            <result column="store_name"  property="storeName"/>
        </association>
    </resultMap>

    <select id="allProduct" resultMap="product">
        select * from erp_product
    </select>
    <!--分页，模糊查询所有商品-->
    <select id="allGoods" resultMap="product">
        select * from erp_product p
        left join erp_product_type t on p.protype_id=t.protype_id
        left join erp_store s on p.store_id=s.store_id
        <where>
            and p.product_state=1
            <if test="productName !=null and productName !=''">
                and p.product_id like '%${productName}%'
                or p.product_name like '%${productName}%'
            </if>
            <if test="stores !=null ">
                <if test="stores.storeName !=null and stores.storeName !=''">
                    and store_name like '%${stores.storeName}%'
                </if>
            </if>
            <if test="protype !=null">
                <if test="protype.protypeName !=null and protype.protypeName !=''">
                    and protype_name like '%${protype.protypeName}%'
                </if>
            </if>
        </where>
        order by p.product_id desc
    </select>

    <!--查询下架商品-->
    <select id="selectXjGoods" resultMap="product">
        select * from erp_product p
        left join erp_product_type t on p.protype_id=t.protype_id
        left join erp_store s on p.store_id=s.store_id
        where p.product_state=0
    </select>

    <!--新增商品-->
    <insert id="addGoods">
        insert into erp_product(product_name, product_picture, protype_id, product_money, product_price, product_pf, product_vip, product_dw, store_id)
        values (#{productName},#{productPicture},#{protype.protypeId},#{productMoney},#{productPrice},#{productPf},#{productVip},#{productDw},#{stores.storeId})
    </insert>

    <!--修改商品-->
    <update id="updateGoods">
        update erp_product set product_name=#{productName},product_picture=#{productPicture},protype_id=#{protype.protypeId},product_money=#{productMoney},
        product_price=#{productPrice},product_pf=#{productPf},product_vip=#{productVip},product_dw=#{productDw},store_id=#{stores.storeId}
        where product_id=#{productId}
    </update>

    <!--下架商品-->
    <update id="xjGoods">
        update erp_product set product_state=0 where product_id=#{productId}
    </update>

    <!--重新上架商品-->
    <update id="sjGoods">
        update erp_product set product_state=1 where product_id=#{productId}
    </update>

    <!--删除商品-->
    <delete id="deleteGoods">
        delete from erp_product where product_id=#{productId}
    </delete>

    <!--查看商品类别-->
    <resultMap id="protype" type="cn.gson.jindie.model.pojos.txypojos.ErpProductType">
        <id column="protype_id" property="protypeId"></id>
        <result column="protype_name" property="protypeName"></result>
    </resultMap>
    <select id="goodType" resultMap="protype">
        select * from erp_product_type
    </select>

    <!--查看仓库名称-->
    <resultMap id="stores" type="cn.gson.jindie.model.pojos.txypojos.ErpStore">
        <id column="store_id" property="storeId"/>
        <result column="store_name" property="storeName"/>
    </resultMap>
    <select id="storeByName" resultMap="stores">
        select * from erp_store
    </select>



    <select id="allProduct2" resultMap="product">select * from erp_product p left
    join erp_store s on p.store_id = s.store_id left
    join erp_check c on p.product_id = c.product_id left join erp_product_type et
on p.protype_id = et.protype_id where s.store_id=#{storeId}
</select>

    <select id="allProductState" resultMap="product">select * from erp_product p left
    join erp_check c on c.product_id=p.product_id where c.check_state=0
                                                    and c.store_id=#{storeId}
</select>
    <select id="allProductState2" resultMap="product">select * from erp_product p left
                                                                                      join erp_check c on c.product_id=p.product_id
                                                      where c.check_state=1 and c.store_id=#{storeId}
    </select>

    <select id="queryProduct" resultMap="product">select * from erp_product p left
    join erp_store c on c.store_id=p.store_id
              where c.store_id=#{storeId}
    </select>

    <select id="queryProductState3" resultMap="product">select * from erp_product p left
    join erp_check c on c.product_id=p.product_id where c.store_id=#{storeId}
</select>

    <resultMap id="ProductMap" type="cn.gson.jindie.model.pojos.txypojos.ErpProduct">
        <id property="productId" column="product_id" />
        <result property="productName" column="product_name"/>
        <result property="productPicture" column="product_picture"/>
        <result property="productMoney" column="product_money"/>
        <result property="productPrice" column="product_price"/>
        <result property="productPf" column="product_pf"/>
        <result property="productVip" column="product_vip"/>
        <result property="productDw" column="product_dw"/>
        <result property="productNumber" column="product_number" />
        <result property="productState" column="product_state"/>

        <association property="protype" javaType="cn.gson.jindie.model.pojos.txypojos.ErpProductType">
            <id property="protypeId" column="protype_id"/>
            <result property="protypeName" column="protype_name"/>
        </association>

    </resultMap>

    <select id="findAllProduct" parameterType="cn.gson.jindie.model.pojos.txypojos.ErpProduct" resultMap="ProductMap">
        select * from erp_product  ep
        left join erp_product_type ept
        on ep.protype_id = ept.protype_id
        <where>
            <if test="productNumber != null and productNumber !=''">
                and ep.product_number like concat('%', #{productNumber}, '%')
            </if>
            <if test="productName != null and productName != ''">
                and ep.product_name like concat('%', #{productName}, '%')
            </if>
            <if test="protypeId != null and protypeId != ''">
                and ep.protype_id like concat('%', #{protypeId}, '%')
            </if>
        </where>
    </select>


</mapper>